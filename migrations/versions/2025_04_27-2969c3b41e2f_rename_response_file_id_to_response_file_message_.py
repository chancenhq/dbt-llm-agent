"""Rename response_file_id to response_file_message_ts in questions table

Revision ID: 2969c3b41e2f
Revises: b021cfc5ff40
Create Date: 2025-04-27 23:26:59.904244

"""

from typing import Sequence, Union
import logging

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from ragstar.utils.logging import get_logger

# Get logger
logger = get_logger(__name__)

# revision identifiers, used by Alembic.
revision: str = "2969c3b41e2f"
down_revision: Union[str, None] = "b021cfc5ff40"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    logger.info(
        f"Starting {revision}: Rename response_file_id to response_file_message_id"
    )

    # ### commands auto generated by Alembic - please adjust! ###
    # Commenting out erroneous drop commands for checkpoint tables
    # op.drop_index("checkpoint_blobs_thread_id_idx", table_name="checkpoint_blobs")
    # op.drop_table("checkpoint_blobs")
    # op.drop_index("checkpoints_thread_id_idx", table_name="checkpoints")
    # op.drop_table("checkpoints")
    # op.drop_table("checkpoint_migrations")
    # op.drop_index("checkpoint_writes_thread_id_idx", table_name="checkpoint_writes")
    # op.drop_table("checkpoint_writes")
    op.add_column(
        "questions", sa.Column("response_file_message_ts", sa.String(), nullable=True)
    )
    op.drop_index("ix_questions_response_file_id", table_name="questions")
    op.create_index(
        op.f("ix_questions_response_file_message_ts"),
        "questions",
        ["response_file_message_ts"],
        unique=False,
    )
    op.drop_column("questions", "response_file_id")
    # ### end Alembic commands ###

    logger.info(
        f"Completed {revision}: Rename response_file_id to response_file_message_id"
    )


def downgrade() -> None:
    """Downgrade schema."""
    logger.info(f"Starting downgrade for {revision}")

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "questions",
        "response_file_message_ts",
        new_column_name="response_file_id",
    )
    # Commenting out erroneous create commands for checkpoint tables
    # op.create_table(
    #     "checkpoint_writes",
    #     sa.Column("thread_id", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column(
    #         "checkpoint_ns",
    #         sa.TEXT(),
    #         server_default=sa.text("''::text"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column("checkpoint_id", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column("task_id", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column("idx", sa.INTEGER(), autoincrement=False, nullable=False),
    #     sa.Column("channel", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column("type", sa.TEXT(), autoincrement=False, nullable=True),
    #     sa.Column("blob", postgresql.BYTEA(), autoincrement=False, nullable=False),
    #     sa.Column(
    #         "task_path",
    #         sa.TEXT(),
    #         server_default=sa.text("''::text"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.PrimaryKeyConstraint(
    #         "thread_id",
    #         "checkpoint_ns",
    #         "checkpoint_id",
    #         "task_id",
    #         "idx",
    #         name="checkpoint_writes_pkey",
    #     ),
    # )
    # op.create_index(
    #     "checkpoint_writes_thread_id_idx",
    #     "checkpoint_writes",
    #     ["thread_id"],
    #     unique=False,
    # )
    # op.create_table(
    #     "checkpoint_migrations",
    #     sa.Column("v", sa.INTEGER(), autoincrement=False, nullable=False),
    #     sa.PrimaryKeyConstraint("v", name="checkpoint_migrations_pkey"),
    # )
    # op.create_table(
    #     "checkpoints",
    #     sa.Column("thread_id", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column(
    #         "checkpoint_ns",
    #         sa.TEXT(),
    #         server_default=sa.text("''::text"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column("checkpoint_id", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column(
    #         "parent_checkpoint_id", sa.TEXT(), autoincrement=False, nullable=True
    #     ),
    #     sa.Column("type", sa.TEXT(), autoincrement=False, nullable=True),
    #     sa.Column(
    #         "checkpoint",
    #         postgresql.JSONB(astext_type=sa.Text()),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column(
    #         "metadata",
    #         postgresql.JSONB(astext_type=sa.Text()),
    #         server_default=sa.text("'{}'::jsonb"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.PrimaryKeyConstraint(
    #         "thread_id", "checkpoint_ns", "checkpoint_id", name="checkpoints_pkey"
    #     ),
    # )
    # op.create_index(
    #     "checkpoints_thread_id_idx", "checkpoints", ["thread_id"], unique=False
    # )
    # op.create_table(
    #     "checkpoint_blobs",
    #     sa.Column("thread_id", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column(
    #         "checkpoint_ns",
    #         sa.TEXT(),
    #         server_default=sa.text("''::text"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column("channel", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column("version", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column("type", sa.TEXT(), autoincrement=False, nullable=False),
    #     sa.Column("blob", postgresql.BYTEA(), autoincrement=False, nullable=True),
    #     sa.PrimaryKeyConstraint(
    #         "thread_id",
    #         "checkpoint_ns",
    #         "channel",
    #         "version",
    #         name="checkpoint_blobs_pkey",
    #     ),
    # )
    # op.create_index(
    #     "checkpoint_blobs_thread_id_idx",
    #     "checkpoint_blobs",
    #     ["thread_id"],
    #     unique=False,
    # )
    # ### end Alembic commands ###

    logger.info(f"Completed downgrade for {revision}")
